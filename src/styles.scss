@use '@angular/material' as mat; // Angular Material
@use "sass:map"; // Accès à la fonction "map-get()"
@use 'assets/styles/_common-theme.scss' as common-theme;
// @use 'assets/styles/_custom-theme.scss' as custom-theme; // Import de partials (mixins)
@include mat.core(); // ONLY ONCE PER APP!

// 1) Définition d'une palette (structure minimale)
$fire-palette: (
  100: yellow,
  500: red,
  700: orange,
  contrast: (500: black)
);

$ice-palette: (
  100: aqua,
  500: darkblue,
  700: blue,
  contrast: (500: black
  )
);

// 2) Définition des sous-thèmes/thème
$my-primary: mat.define-palette(mat.$indigo-palette);
$my-accent: mat.define-palette(mat.$pink-palette);

// 3) Définition du thème (light/dark)
$my-light-theme: mat.define-light-theme((color: (primary: $my-primary,
        accent: $my-accent,
      )));

// 4) Injection du thème.
@include mat.all-component-themes($my-light-theme);

// 5) Personnalisation au niveau global: "map-get($fire-palette, contrast, 500)"
.mat-button,
.mat-raised-button {
  &.mat-primary {
    // color: map-get($fire-palette, contrast, 500);
    // background: map-get($fire-palette, 100);

    &:hover {
    }

    &:active {
    }

    &:disabled {
    }
  }
}

// 6) par mixin (création de classes CSS personnalisées dans un partial)
@include common-theme.colorisation();
// @include custom-theme.colorisation($ice-palette);


